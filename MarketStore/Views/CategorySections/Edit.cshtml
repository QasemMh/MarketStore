@model CategorySection

@{
    ViewData["Title"] = "Edit";
}

<h1 class="h3 mb-4 text-gray-800">Edit Item</h1>


<div class="row">
    <div class="col-md-6">
        <form asp-action="Edit" method="post" enctype="multipart/form-data">

            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="Image" />

            <div class="card shadow">
                <div class="card-header py-3">
                </div>
                <div class="card-body">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Title" class="control-label"></label>
                        <input asp-for="Title" class="form-control" required />
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>

                    <div class="form-group">
                        <div class="custom-file">
                            <input type="file" accept="image/*"
                                   class="custom-file-input" id="imageFile" asp-for="FormFile">
                            <label class="custom-file-label" for="imageFile">Upload New Image</label>
                        </div>

                        <span asp-validation-for="Image" class="text-danger"></span>
                    </div>

                </div>
                <div class="card-footer text-muted">
                    <button type="submit" class="btn btn-primary">Save</button>
                    <a asp-action="Index" class="btn btn-outline-secondary">Back to List</a>
                </div>
            </div>
        </form>
    </div>

    <div class="col-md-6">
        <div class="my-image-container my-grid" id="imgContainer">
            <img src="~/images/@Model.Image"
                 alt="photo"
                 class="img-fluid rounded" id="previewImg" />
        </div>
    </div>
</div>

@section Scripts {


    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        let imgContainer = document.getElementById("imgContainer");
        let imgInp = document.getElementById("imageFile");
        let previewImg = document.getElementById("previewImg");

        imgInp.onchange = evt => {
            const [file] = imgInp.files
            if (file) {
                previewImg.src = URL.createObjectURL(file);

                imgContainer.className = "my-image-container my-grid";
            }
        }

    </script>


    }
